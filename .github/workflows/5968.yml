# 该 workflow 将安装 Python 依赖，运行代码，并提交更新到 GitHub

name: 5968

on:
  #schedule:
    # 设置为 UTC 时间，UTC23点对应北京时间7点
    #- cron: '00 23 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  build:
    runs-on: windows-latest
    env:
      TZ: Asia/Shanghai

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置 Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'  # 启用 pip 缓存，加速安装

    - name: 安装依赖
      run: pip install -r requirements.txt

    - name: 运行 Python 代码
      run: python py/5968.py
      env:
        APP_ID: ${{ secrets.APP_ID }}
        ydyp: ${{ secrets.ydyp }}
    - name: Upload app.log to Gist
      env:
        GH_TOKEN: ${{ secrets.GIST_TOKEN }}
      shell: pwsh
      run: |
        # 设置 Gist ID
        $GIST_ID = "cfd5113bc8f9d4ad710ff91af1967ec4"

        # 检查 gh 命令是否可用
        if (-not (Get-Command gh -ErrorAction SilentlyContinue)) {
          Write-Host "GitHub CLI (gh) 未安装，尝试安装..."
          Invoke-WebRequest -Uri "https://github.com/cli/cli/releases/latest/download/gh_2.44.0_windows_amd64.msi" -OutFile "gh.msi"
          Start-Process -Wait -FilePath "msiexec" -ArgumentList "/i gh.msi /quiet /norestart"
          Remove-Item "gh.msi"
        }

        # 配置 GitHub CLI 认证
        echo $env:GH_TOKEN | gh auth login --with-token

        # 确保 gh 认证成功
        gh auth status

        # 追加日志内容到 Gist
        gh gist edit $GIST_ID --add app.log || gh gist create app.log --public
